{"name": "Niklaus Wirth", "content": "\n Niklaus Emil Wirth (born 15 February 1934) is a Swiss computer scientist. He has designed several programming languages, including Pascal, and pioneered several classic topics in software engineering. In 1984, he won the Turing Award, generally recognized as the highest distinction in computer science,[3][4] for developing a sequence of innovative computer languages.[5]\n Wirth was born in Winterthur, Switzerland, in 1934. In 1959, he earned a Bachelor of Science (B.S.) degree in electronic engineering from the Swiss Federal Institute of Technology Z\u00fcrich (ETH Z\u00fcrich). In 1960, he earned a Master of Science (MSc) from Universit\u00e9 Laval, Canada. Then in 1963, he was awarded a PhD in Electrical Engineering and Computer Science (EECS) from the University of California, Berkeley, supervised by the computer design pioneer Harry Huskey.\n From 1963 to 1967, he served as assistant professor of computer science at Stanford University and again at the University of Zurich. Then in 1968, he became Professor of Informatics at ETH Z\u00fcrich, taking two one-year sabbaticals at Xerox PARC in California (1976\u20131977 and 1984\u20131985). He retired in 1999.\n He was involved with developing international standards in programming and informatics, as a member of the International Federation for Information Processing (IFIP) IFIP Working Group 2.1 on Algorithmic Languages and Calculi,[6] which specified, maintains, and supports the programming languages ALGOL 60 and ALGOL 68.[7]\n In 2004, he was made a Fellow of the Computer History Museum \"for seminal work in programming languages and algorithms, including Euler, Algol-W, Pascal, Modula, and Oberon.\"[8]\n Wirth was the chief designer of the programming languages Euler (1965), ALGOL W (1966), Pascal (1970),[9] Modula (1975), Modula-2 (1978), Oberon (1987), Oberon-2 (1991), and Oberon-07 (2007). He was also a major part of the design and implementation team for the operating systems Medos-2 (1983, for the Lilith workstation), and Oberon (1987, for the Ceres workstation), and for the Lola (1995) digital hardware design and simulation system. In 1984, he received the Association for Computing Machinery (ACM) Turing Award for the development of these languages. In 1994, he was inducted as a Fellow of the ACM.\n His book, written jointly with Kathleen Jensen, The Pascal User Manual and Report, served as the basis of many language implementation efforts in the 1970s and 1980s in the United States and across Europe.[citation needed]\n His article Program Development by Stepwise Refinement, about the teaching of programming, is considered to be a classic text in software engineering.[10] In 1975, he wrote the book Algorithms + Data Structures = Programs, which gained wide recognition.[11] Major revisions of this book with the new title Algorithms + Data Structures were published in 1985 and 2004. The examples in the first edition were written in Pascal. These were replaced in the later editions with examples written in Modula-2 and Oberon respectively.\n His textbook, Systematic Programming: An Introduction, was considered a good source for students who wanted to do more than just coding.[citation needed] The cover flap of the sixth edition (1973) stated the book \"... is tailored to the needs of people who view a course on systematic construction of algorithms as part of their basic mathematical training, rather than to the immediate needs of those who wish to be able to occasionally encode a problem and hand it over to their computer for instant solution.\"[12] Regarded as a challenging text to work through, it was sought as imperative reading for those interested in numerical mathematics.[13]\n In 1992, he and J\u00fcrg Gutknecht published the full documentation of the Oberon OS.[14] A second book, with Martin Reiser, was intended as a programming guide.[15]\n In 1995, he popularized the adage now named Wirth's law, which states that software is getting slower more rapidly than hardware becomes faster. In his 1995 paper A Plea for Lean Software he attributes it to Martin Reiser.[16]\n ", "tags": ["1934 births", "Living people", "ETH Zurich alumni", "ETH Zurich faculty", "Swiss electronics engineers", "Fellows of the Association for Computing Machinery", "Formal methods people", "Pascal (programming language)", "Programming language designers", "Programming language researchers", "Recipients of the Pour le M\u00e9rite (civil class)", "Swiss computer scientists", "Turing Award laureates", "Universit\u00e9 Laval alumni", "People from Winterthur", "Computer science educators", "Scientists at PARC (company)", "Articles with short description", "Short description matches Wikidata", "Use dmy dates from April 2020", "Biography with signature", "Articles with hCards", "All articles with unsourced statements", "Articles with unsourced statements from December 2018", "Commons category link from Wikidata", "Official website different in Wikidata and Wikipedia", "Wikipedia articles with ACM-DL identifiers", "Wikipedia articles with BIBSYS identifiers", "Wikipedia articles with BNF identifiers", "Wikipedia articles with CINII identifiers", "Wikipedia articles with DBLP identifiers", "Wikipedia articles with GND identifiers", "Wikipedia articles with HDS identifiers", "Wikipedia articles with ISNI identifiers", "Wikipedia articles with LCCN identifiers", "Wikipedia articles with LNB identifiers", "Wikipedia articles with MGP identifiers", "Wikipedia articles with NDL identifiers", "Wikipedia articles with NKC identifiers", "Wikipedia articles with NLP identifiers", "Wikipedia articles with NTA identifiers", "Wikipedia articles with PLWABN identifiers", "Wikipedia articles with SNAC-ID identifiers", "Wikipedia articles with SUDOC identifiers", "Wikipedia articles with Trove identifiers", "Wikipedia articles with VIAF identifiers", "Wikipedia articles with WORLDCATID identifiers"], "raw": "Swiss computer scientist\n\n\nNiklaus Emil WirthBorn (1934-02-15) 15 February 1934 (age\u00a087)Winterthur, SwitzerlandCitizenshipSwitzerlandEducation\nBS, ETH Zurich (1959)\nMSc, Universit\u00e9 Laval (1960)\nPhD, University of California, Berkeley (1963)\nKnown\u00a0forALGOL W, Euler, Pascal, Modula, Modula-2, Oberon, Oberon-2, Oberon-07, Oberon SystemAwards\nIEEE Emanuel R. Piore Award (1983)[1]\nTuring Award (1984)\nSIGPLAN Programming Languages Achievement Award\nFellow of the Computer History Museum (2004)[2]\nMarcel Benoist Prize (1989)\nScientific careerFieldsComputer scienceInstitutions\nETH Zurich\nStanford University\nUniversity of Zurich\nXerox PARC\nThesisA Generalization of Algol\u00a0(1963)Doctoral advisorHarry HuskeyDoctoral studentsMichael Franz, Martin Odersky\nSignature\nNiklaus Emil Wirth (born 15 February 1934) is a Swiss computer scientist. He has designed several programming languages, including Pascal, and pioneered several classic topics in software engineering. In 1984, he won the Turing Award, generally recognized as the highest distinction in computer science,[3][4] for developing a sequence of innovative computer languages.[5]\n\nContents\n\n1 Biography\n2 Programming languages\n3 Publications\n4 Wirth's law\n5 See also\n6 References\n7 External links\n\n\nBiography[edit]\nWirth was born in Winterthur, Switzerland, in 1934. In 1959, he earned a Bachelor of Science (B.S.) degree in electronic engineering from the Swiss Federal Institute of Technology Z\u00fcrich (ETH Z\u00fcrich). In 1960, he earned a Master of Science (MSc) from Universit\u00e9 Laval, Canada. Then in 1963, he was awarded a PhD in Electrical Engineering and Computer Science (EECS) from the University of California, Berkeley, supervised by the computer design pioneer Harry Huskey.\nFrom 1963 to 1967, he served as assistant professor of computer science at Stanford University and again at the University of Zurich. Then in 1968, he became Professor of Informatics at ETH Z\u00fcrich, taking two one-year sabbaticals at Xerox PARC in California (1976\u20131977 and 1984\u20131985). He retired in 1999.\nHe was involved with developing international standards in programming and informatics, as a member of the International Federation for Information Processing (IFIP) IFIP Working Group 2.1 on Algorithmic Languages and Calculi,[6] which specified, maintains, and supports the programming languages ALGOL 60 and ALGOL 68.[7]\nIn 2004, he was made a Fellow of the Computer History Museum \"for seminal work in programming languages and algorithms, including Euler, Algol-W, Pascal, Modula, and Oberon.\"[8]\n\nProgramming languages[edit]\n Niklaus Wirth, 1969\nWirth was the chief designer of the programming languages Euler (1965), ALGOL W (1966), Pascal (1970),[9] Modula (1975), Modula-2 (1978), Oberon (1987), Oberon-2 (1991), and Oberon-07 (2007). He was also a major part of the design and implementation team for the operating systems Medos-2 (1983, for the Lilith workstation), and Oberon (1987, for the Ceres workstation), and for the Lola (1995) digital hardware design and simulation system. In 1984, he received the Association for Computing Machinery (ACM) Turing Award for the development of these languages. In 1994, he was inducted as a Fellow of the ACM.\n\nPublications[edit]\nHis book, written jointly with Kathleen Jensen, The Pascal User Manual and Report, served as the basis of many language implementation efforts in the 1970s and 1980s in the United States and across Europe.[citation needed]\nHis article Program Development by Stepwise Refinement, about the teaching of programming, is considered to be a classic text in software engineering.[10] In 1975, he wrote the book Algorithms + Data Structures = Programs, which gained wide recognition.[11] Major revisions of this book with the new title Algorithms + Data Structures were published in 1985 and 2004. The examples in the first edition were written in Pascal. These were replaced in the later editions with examples written in Modula-2 and Oberon respectively.\nHis textbook, Systematic Programming: An Introduction, was considered a good source for students who wanted to do more than just coding.[citation needed] The cover flap of the sixth edition (1973) stated the book \"... is tailored to the needs of people who view a course on systematic construction of algorithms as part of their basic mathematical training, rather than to the immediate needs of those who wish to be able to occasionally encode a problem and hand it over to their computer for instant solution.\"[12] Regarded as a challenging text to work through, it was sought as imperative reading for those interested in numerical mathematics.[13]\nIn 1992, he and J\u00fcrg Gutknecht published the full documentation of the Oberon OS.[14] A second book, with Martin Reiser, was intended as a programming guide.[15]\n\nWirth's law[edit]\nMain article: Wirth's law\nIn 1995, he popularized the adage now named Wirth's law, which states that software is getting slower more rapidly than hardware becomes faster. In his 1995 paper A Plea for Lean Software he attributes it to Martin Reiser.[16]\n\nSee also[edit]\n21655 Niklauswirth asteroid\nExtended Backus\u2013Naur form\nWirth syntax notation\nBucky bit\nWirth\u2013Weber precedence relationship\nList of pioneers in computer science\nReferences[edit]\n\n\n^ \"IEEE Emanuel R. Piore Award Recipients\" (PDF). IEEE. Archived from the original (PDF) on 24 November 2010. Retrieved 20 March 2021.\n\n^ Niklaus Wirth 2004 Fellow\n\n^ Dasgupta, Sanjoy; Papadimitriou, Christos; Vazirani, Umesh (2008). Algorithms. McGraw-Hill Education. p.\u00a0317. ISBN\u00a0978-0-07-352340-8.\n\n^ Bibliography of Turing Award lectures, DBLP\n\n^ Haigh, Thomas (1984). \"Niklaus E. Wirth\". A. M. Turing Award. Association for Computing Machinery. Retrieved 15 October 2019.\n\n^ Jeuring, Johan; Meertens, Lambert; Guttmann, Walter (17 August 2016). \"Profile of IFIP Working Group 2.1\". Foswiki. Retrieved 4 October 2020.\n\n^ Swierstra, Doaitse; Gibbons, Jeremy; Meertens, Lambert (2 March 2011). \"ScopeEtc: IFIP21: Foswiki\". Foswiki. Retrieved 4 October 2020.\n\n^ \"Niklaus Wirth: 2004 Fellow\". Computer History Museum (CHM). Retrieved 15 October 2019.\n\n^ Petzold, Charles (9 September 1996). \"Programming Languages: Survivors and Wannabes\". The New York Times. ISSN\u00a00362-4331. Retrieved 8 March 2018.\n\n^ Wirth, Niklaus (2001). \"Program Development by Stepwise Refinement\".  In Broy, Manfred; Denert, Ernst (eds.). Pioneers and Their Contributions to Software Engineering. Berlin, Heidelberg: Springer. doi:10.1007/978-3-642-48354-7. ISBN\u00a0978-3642483554. S2CID\u00a011348419.\n\n^ Citations collected by the Association for Computing Machinery (ACM)\n\n^ Wirth, Niklaus (1973). \"Cover flap\". Systematic Programming: An Introduction. ISBN\u00a00-13-880369-2.\n\n^ Abrahams, Paul (July 1974). \"Systematic Programming: An Introduction by Niklaus Wirth\". Mathematics of Computation. American Mathematical Society. 28 (127): 881\u2013883. doi:10.2307/2005728. JSTOR\u00a02005728.\n\n^ Wirth, Niklaus; Gutknecht, J\u00fcrg (1992). Project Oberon: The Design of an Operating System and Compiler (PDF). Addison-Wesley, ACM Press. ISBN\u00a0978-0201544282. Archived from the original (PDF) on 12 April 2013. Out of print. Online version of a 2nd edition. 2005 edition, PDF.\n\n^ Reiser, Martin; Wirth, Niklaus (1992). Programming in Oberon: Steps Beyond Pascal and Modula (PDF). Addison-Wesley, ACM Press. ISBN\u00a0978-0201565430.. Out of print.\n\n^ Wirth, Niklaus (February 1995). \"A Plea for Lean Software\". Computer. 28 (2): 64\u201368. doi:10.1109/2.348001.\n\n\nExternal links[edit]\n\n\n\nWikimedia Commons has media related to Niklaus Wirth.\n\n\n\n\nWikiquote has quotations related to: Niklaus Wirth\n\nOfficial website, ETH Z\u00fcrich\nBiography at ETH Z\u00fcrich\nNiklaus Wirth at DBLP Bibliography Server \nNiklaus E. Wirth at ACM\nWirth, Niklaus (April 1971). \"Program Development by Stepwise Refinement\". Communications of the ACM. 14 (4): 221\u2013227. doi:10.1145/362575.362577. hdl:20.500.11850/80846. S2CID\u00a013214445.\nWirth, N. (1974). \"On the Design of Programming Languages\" (PDF). Proc. IFIP Congress 74: 386\u2013393.\nTuring Award Lecture, 1984\nPascal and its Successors paper by Niklaus Wirth \u2013 also includes short biography.\nA Few Words with Niklaus Wirth\nThe School of Niklaus Wirth: The Art of Simplicity, by L\u00e1szl\u00f3 B\u00f6sz\u00f6rm\u00e9nyi, J\u00fcrg Gutknecht, Gustav Pomberger (editors). dpunkt.verlag; Morgan Kaufmann Publishers, 2000. ISBN\u00a03-932588-85-1, ISBN\u00a01-55860-723-4.\nThe book Compiler Construction\nThe book Algorithms and Data Structures\nThe book Project Oberon \u2013 The Design of an Operating System and Compiler. The book about the Oberon language and Operating System is now available as a PDF file. The PDF file has an additional appendix Ten Years After: From Objects to Components.\nProject Oberon 2013\nvteNiklaus WirthSoftwareProgramminglanguagesEuler (1965) \u2192 ALGOL W (1966) \u2192 Pascal (1970) \u2192 Modula (1975) \u2192 Modula-2 (1978) \u2192 Object Pascal (1986) \u2192 Oberon (1987) \u2192 Oberon-2 (1991) \u2192 Lola (1995) \u2192 Active Oberon (1998) \u2192 Oberon-07 (2007)Operating systemsOberon System (1987) \u2192 Active Object System (AOS, 2002), Bluebottle (2005), A2 (2008)Formalisms\nWirth's law\nWirth syntax notation\nWirth\u2013Weber precedence relationship\nBooks\nAlgorithms + Data Structures = Programs\nWorkstationsLilith (1977) \u2192 Ceres (1985)Workplaces\nStanford University (1963\u201367)\nUniversity of Zurich (1963\u201367)\nETH Zurich (1968\u201399)\nXerox PARC (1976\u201377, 1984\u201385)\nCollaborators\nJ\u00fcrg Gutknecht\nTony Hoare\nde:Hanspeter M\u00f6ssenb\u00f6ck\nLarry Tesler\nAwards\nTuring Award\nSIGPLAN Programming Languages Achievement Award\nFellow of the Computer History Museum\nMarcel Benoist Prize\n\n Category\n\nvteTimelines of computingComputing\nBefore 1950\n1950\u20131979\n1980s\n1990s\n2000s\n2010s\n2020s\nScientific\nWomen in computing\nComputer science\nAlgorithms\nArtificial intelligence\nBinary prefixes\nCryptography\nMachine learning\nQuantum computing\nSoftware\nFree and open-source software\nHypertext technology\nOperating systems\nDOS family\nWindows\nLinux\nProgramming languages\nVirtualization development\nMalware\nInternet\nInternet conflicts\nWeb browsers\nWeb search engines\nNotable people\nKathleen Antonelli\nJohn Vincent Atanasoff\nCharles Babbage\nJohn Backus\nJean Bartik\nGeorge Boole\nVint Cerf\nJohn Cocke\nStephen Cook\nEdsger Dijkstra\nJ. Presper Eckert\nAdele Goldstine\nLois Haibt\nBetty Holberton\nMargaret Hamilton\nGrace Hopper\nDavid A. Huffman\nBob Kahn\nBrian Kernighan\nAndrew Koenig\nSemyon Korsakov\nNancy Leveson\nAda Lovelace\nDonald Knuth\nJoseph Kruskal\nDouglas McIlroy\nMarlyn Meltzer\nJohn von Neumann\nKlara Dan von Neumann\nDennis Ritchie\nGuido van Rossum\nFrances Spence\nBjarne Stroustrup\nRuth Teitelbaum\nKen Thompson\nLinus Torvalds\nAlan Turing\nPaul Vixie\nLarry Wall\nStephen Wolfram\nNiklaus Wirth\nSteve Wozniak\nKonrad Zuse\n\nvteALGOL programmingImplementationsTechnicalstandards\nALGOL 58\nALGOL 60\nALGOL 68\nDialects\nABC ALGOL\nALCOR\nALGO\nALGOL 68C\nALGOL 68-R\nALGOL 68RS\nALGOL 68S\nALGOL N\nALGOL W\nALGOL X\nAtlas Autocode (Edinburgh IMP)\nBurroughs ALGOL\nCoral 66\nDartmouth ALGOL 30\nDASK ALGOL\nDG/L\nElliott ALGOL\nExecutive Systems Problem Oriented Language (ESPOL)\nFLACC\nIMP\nJOVIAL\nKidsgrove Algol\nMary\nNELIAC\nRTL/2\nS-algol, PS-algol, Napier88\nSimula\nSmall Machine ALGOL Like Language (SMALL)\nSMIL ALGOL\nFormalisms\nJensen's Device\nVan Wijngaarden grammar\nCommunityOrganizationsProfessionalassociations\nALCOR Group\nAssociation for Computing Machinery (ACM)\nBSI Group\nEuro-Asian Council for Standardization, Metrology and Certification (EASC)\nInternational Federation for Information Processing (IFIP) IFIP Working Group 2.1\nSociety of Applied Mathematics and Mechanics (GAMM)\nBusiness\nBurroughs Corporation\nElliott Brothers\nRegnecentralen\nEducation\nCase Institute of Technology\nUniversity of Edinburgh\nUniversity of St Andrews\nManchester University\nMassachusetts Institute of Technology (MIT)\nGovernment\nRoyal Radar Establishment (RRE)\nPeopleALGOL 58\nJohn Backus\nFriedrich L. Bauer\nHermann Bottenbruch\nCharles Katz\nAlan Perlis\nHeinz Rutishauser\nKlaus Samelson\nJoseph Henry Wegstein\nALGOL 60\nBackus+\nRoland Carl Backhouse\nBauer+\nRichard Bird\nStephen R. Bourne\nEdsger W. Dijkstra\nAndrey Ershov\nRobert W. Floyd\nJeremy Gibbons\nJulien Green\nDavid Gries\nEric Hehner\nTony Hoare\nJ\u00f8rn Jensen\nKatz+\nPeter Landin\nTom Maibaum\nConor McBride\nJohn McCarthy\nCarroll Morgan\nPeter Naur\nMaurice Nivat\nJohn E. L. Peck\nPerlis+\nBrian Randell\nRutishauser\nSamelson+\nJacob T. Schwartz\nMicha Sharir\nDavid Turner\nBernard Vauquois\nEiiti Wada\nWegstein+\nAdriaan van Wijngaarden\nMike Woodger\n+ = full name and link in prior ALGOL version above\nSimula\nOle-Johan Dahl\nKristen Nygaard\nALGOL 68\nBauer+\nSusan G. Bond\nBourne+\nRobert Dewar\nDijkstra+\nGerhard Goos\nMichael Guy\nHoare+\nCornelis H. A. Koster\nPeter Landin\nCharles H. Lindsey\nBarry J. Mailloux\nMcCarthy+\nLambert Meertens\nNaur+\nPeck+\nWillem van der Poel\nRandell+\nDouglas T. Ross\nSamelson+\nMichel Sintzoff\nvan Wijngaarden+\nNiklaus Wirth\nWoodger+\nPhilip Woodward\nNobuo Yoneda\n+ = full name and link in prior ALGOL version above\n\nHal Abelson\nJohn Barnes\nTony Brooker\nRon Morrison\nPeter O'Hearn\nJohn C. ReynoldsOther\nALGOL Bulletin\n\n Category: ALGOL\n Category: ALGOL 60\n\nvtePascal programming language familyDialects\nPascal\nObject Pascal\nPascal Script\nOxygene\nClascal\nConcurrent Pascal\nJoyce\nSuperPascal\nModern Pascal\nCompilersCurrent\nDelphi (history)\nOxygene\nPocketStudio\nVSI Pascal\nIP Pascal\nFree Pascal (Lazarus)\nPascalABC.NET\nGNU Pascal\nTurbo51\nMIDletPascal\nPic Micro Pascal\nACK\nHistoric\nVirtual Pascal\nApple Pascal\nTurbo Pascal\nMicrosoft Pascal\nUCSD Pascal\nJRT\nPascal/MT+\nAPI\nCLX\nFCL\nFireMonkey\nLCL\nObject Windows Library\nOpenWire\nRTL\nTurbo Vision\nVisual Component Library\n\nComparison of Pascal and C\nComparison of Pascal and Delphi\nRelated to\nALGOL (1958)\nModula-2 (1977)\nAda (1983)\nOberon (1986)\nModula-3 (1988)\nOberon-2 (1991)\nComponent Pascal (1991)\n\nvteModula, OberonModulaBy WirthModula (1975) \u2192 Modula-2 (1978)By others\nModula-2+ (1984)\nModula-3 (1988)\nBaby Modula-3 (1993)\nObliq (1993)\nAlma-0 (1997)\nOperating systems\nMedos-2 (1983, Knudsen)\nWorkstations\nLilith (1980, Wirth)\nKronos (1988, Soviet)\nDevelopersOrganizations\nETH Zurich\nModula Computer Systems\nCentrum Wiskunde & Informatica\nDigital Equipment Corporation (DEC) Systems Research Center (SRC)\nAcorn Research Center\nOlivetti Research Center (ORC)\nelego Software Solutions GmbH\nAcademy of Sciences of the Soviet Union, Novosibirsk\nPeople\nNiklaus Wirth\nMart\u00edn Abadi\nLuca Cardelli\nGreg Nelson\nOberonBy WirthOberon (1987) \u2192 Oberon-2 (1991) \u2192 Lola (1995) \u2192 Active Oberon (1998) \u2192 Oberon-07 (2007)Operating systems\nOberon System (1987)\nActive Object System (AOS, 2002), Bluebottle (2005), A2 (2008)\nWorkstationCeres (1985)By others\nObject Oberon (1989)\nOberon/F, BlackBox Component Builder (1993)\nComponent Pascal (1997)\nZonnon (2013)\nDevelopersOrganizations\nETH Zurich\nJohannes Kepler University Linz\nOberon microsystems AG\nPeople\nNiklaus Wirth\nJ\u00fcrg Gutknecht\nTony Hoare\nde:Hanspeter M\u00f6ssenb\u00f6ck\n\n Category: Modula\n Category: Oberon\n\nvteA. M. Turing Award laureates1960s\nAlan Perlis (1966)\nMaurice Vincent Wilkes (1967)\nRichard Hamming (1968)\nMarvin Minsky (1969)\n1970s\nJames H. Wilkinson (1970)\nJohn McCarthy (1971)\nEdsger W. Dijkstra (1972)\nCharles Bachman (1973)\nDonald Knuth (1974)\nAllen Newell; Herbert A. Simon (1975)\nMichael O. Rabin; Dana Scott (1976)\nJohn Backus (1977)\nRobert W. Floyd (1978)\nKenneth E. Iverson (1979)\n1980s\nTony Hoare (1980)\nEdgar F. Codd (1981)\nStephen Cook (1982)\nKen Thompson; Dennis Ritchie (1983)\nNiklaus Wirth (1984)\nRichard Karp (1985)\nJohn Hopcroft; Robert Tarjan (1986)\nJohn Cocke (1987)\nIvan Sutherland (1988)\nWilliam Kahan (1989)\n1990s\nFernando J. Corbat\u00f3 (1990)\nRobin Milner (1991)\nButler Lampson (1992)\nJuris Hartmanis; Richard E. Stearns (1993)\nEdward Feigenbaum; Raj Reddy (1994)\nManuel Blum (1995)\nAmir Pnueli (1996)\nDouglas Engelbart (1997)\nJim Gray (1998)\nFred Brooks (1999)\n2000s\nAndrew Yao (2000)\nOle-Johan Dahl; Kristen Nygaard (2001)\nRon Rivest; Adi Shamir; Leonard Adleman (2002)\nAlan Kay (2003)\nVint Cerf; Bob Kahn (2004)\nPeter Naur (2005)\nFrances Allen (2006)\nEdmund M. Clarke; E. Allen Emerson; Joseph Sifakis (2007)\nBarbara Liskov (2008)\nCharles P. Thacker (2009)\n2010s\nLeslie G. Valiant (2010)\nJudea Pearl (2011)\nShafi Goldwasser; Silvio Micali (2012)\nLeslie Lamport (2013)\nMichael Stonebraker (2014)\nMartin Hellman; Whitfield Diffie (2015)\nTim Berners-Lee (2016)\nJohn L. Hennessy; David Patterson (2017)\nYoshua Bengio; Geoffrey Hinton; Yann LeCun (2018)\nEd Catmull; Pat Hanrahan (2019)\n2020s\nAlfred Aho; Jeffrey Ullman (2020)\n\nvteSoftware engineeringFields\nComputer programming\nRequirements engineering\nSoftware deployment\nSoftware design\nSoftware maintenance\nSoftware testing\nSystems analysis\nFormal methods\nConcepts\nData modeling\nEnterprise architecture\nFunctional specification\nModeling language\nProgramming paradigm\nSoftware\nSoftware archaeology\nSoftware architecture\nSoftware configuration management\nSoftware development process/methodology\nSoftware quality\nSoftware quality assurance\nSoftware verification and validation\nStructured analysis\nEssential Analysis\nOrientations\nAgile\nAspect-oriented\nObject orientation\nOntology\nService orientation\nSDLC\nModelsDevelopmental\nAgile\nEUP\nExecutable UML\nIncremental model\nIterative model\nPrototype model\nRAD\nUP\nScrum\nSpiral model\nV-Model\nWaterfall model\nXP\nOther\nSPICE\nCMMI\nData model\nER model\nFunction model\nInformation model\nMetamodeling\nObject model\nSystems model\nView model\nLanguages\nIDEF\nUML\nUSL\nSysML\nSoftwareengineers\nVictor Basili\nKent Beck\nGrady Booch\nFred Brooks\nBarry Boehm\nPeter Chen\nDanese Cooper\nWard Cunningham\nTom DeMarco\nEdsger W. Dijkstra\nDelores M. Etter\nMartin Fowler\nAdele Goldstine\nMargaret Hamilton\nC. A. R. Hoare\nLois Haibt\nMary Jean Harrold\nGrace Hopper\nWatts Humphrey\nMichael A. Jackson\nIvar Jacobson\nAlan Kay\nNancy Leveson\nStephen J. Mellor\nBertrand Meyer\nDavid Parnas\nTrygve Reenskaug\nWinston W. Royce\nJames Rumbaugh\nMary Shaw\nPeri Tarr\nElaine Weyuker\nNiklaus Wirth\nEdward Yourdon\nRelated fields\nTheoretical computer science\nComputer engineering\nProject management\nRisk management\nSystems engineering\n\n Category\n Commons\n\nAuthority control \nACM DL: 81332536058\nBIBSYS: 90051355\nBNF: cb123836887 (data)\nCiNii: DA00038579\nDBLP: w/NiklausWirth\nGND: 120777983\nHDS: 031725\nISNI: 0000 0000 8405 6132\nLCCN: n50013767\nLNB: 000085594\nMGP: 61847\nNDL: 00461229\nNKC: jn20020918015\nNLP: A1153090X\nNTA: 07270764X\nPLWABN: 9810705958605606\nSNAC: w62j7fg8\nSUDOC: 032896301\nTrove: 1298733\nVIAF: 108127625\n WorldCat Identities: lccn-n50013767\n\n\n\n\n"}